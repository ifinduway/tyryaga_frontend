import mongoose from 'mongoose';
import dotenv from 'dotenv';
import User from '../models/User.js';
import Item from '../models/Item.js';
import UserInventory from '../models/UserInventory.js';

dotenv.config({ path: '../../.env' });

const MONGODB_URI =
  process.env.MONGODB_URI || 'mongodb://localhost:27017/tyuryaga';

const testShopAndInventory = async nickname => {
  try {
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n');

    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await User.findOne({ nickname });
    if (!user) {
      console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${nickname}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }

    console.log('üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:');
    console.log(`   –ò–º—è: ${user.nickname}`);
    console.log(`   –£—Ä–æ–≤–µ–Ω—å: ${user.level}`);
    console.log(`   –î–µ–Ω—å–≥–∏: ${user.money.toLocaleString('ru-RU')} üí∞`);
    console.log(`   –û–ø—ã—Ç: ${user.exp.toLocaleString('ru-RU')} ‚ú®`);
    console.log(`   –≠–Ω–µ—Ä–≥–∏—è: ${user.energy.toLocaleString('ru-RU')} ‚ö°`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
    console.log('\nüõí –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ:');
    const items = await Item.find().sort({ type: 1, level: 1 }).limit(10);

    if (items.length === 0) {
      console.log('   ‚ö†Ô∏è  –ü—Ä–µ–¥–º–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run seed:items');
      return;
    }

    console.log(`   –í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${await Item.countDocuments()}`);
    console.log('\n   –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤:');
    items.slice(0, 5).forEach(item => {
      const rarityEmoji = {
        common: '‚ö™',
        uncommon: 'üü¢',
        rare: 'üîµ',
        epic: 'üü£',
        legendary: 'üü†'
      };
      console.log(
        `   ${rarityEmoji[item.rarity]} ${item.name} (${item.type}, –£—Ä.${item.level})`
      );
      console.log(`      üí∞ –¶–µ–Ω–∞: ${item.price.toLocaleString('ru-RU')}`);
      console.log(`      üìä –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: ${JSON.stringify(item.stats)}`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\nüéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
    const userInventory = await UserInventory.findOne({
      userId: user._id
    }).populate('items.itemId');

    if (!userInventory || userInventory.items.length === 0) {
      console.log('   üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç');
      console.log('   üí° –ö—É–ø–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∏–≥—Ä–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏');
    } else {
      console.log(`   –í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${userInventory.items.length}`);
      console.log(
        `   –ú–∞–∫—Å–∏–º—É–º —Å–ª–æ—Ç–æ–≤: ${userInventory.maxSlots || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`
      );
      console.log('\n   –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:');

      let totalValue = 0;
      for (const invItem of userInventory.items) {
        if (!invItem.itemId) continue;

        const item = invItem.itemId;
        const rarityEmoji = {
          common: '‚ö™',
          uncommon: 'üü¢',
          rare: 'üîµ',
          epic: 'üü£',
          legendary: 'üü†'
        };

        console.log(
          `\n   ${rarityEmoji[item.rarity]} ${item.name} ${invItem.equipped ? 'üîß (–≠–∫–∏–ø–∏—Ä–æ–≤–∞–Ω–æ)' : ''}`
        );
        console.log(`      –¢–∏–ø: ${item.type}`);
        console.log(`      –£—Ä–æ–≤–µ–Ω—å: ${item.level}`);
        console.log(`      –†–µ–¥–∫–æ—Å—Ç—å: ${item.rarity}`);
        console.log(`      –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${invItem.quantity}`);
        if (invItem.equipped) {
          console.log(`      –°–ª–æ—Ç: ${invItem.slot || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        }
        console.log(`      –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: ${JSON.stringify(item.stats)}`);
        console.log(
          `      –°—Ç–æ–∏–º–æ—Å—Ç—å: ${item.price.toLocaleString('ru-RU')} üí∞`
        );
        console.log(
          `      –ü—Ä–æ–¥–∞–∂–∞: ${item.sellPrice.toLocaleString('ru-RU')} üí∞`
        );

        totalValue += item.sellPrice * invItem.quantity;
      }

      console.log('\n   üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è:');
      console.log(`      –í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${userInventory.items.length}`);
      console.log(
        `      –≠–∫–∏–ø–∏—Ä–æ–≤–∞–Ω–æ: ${userInventory.items.filter(i => i.equipped).length}`
      );
      console.log(
        `      –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏: ${totalValue.toLocaleString('ru-RU')} üí∞`
      );
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å
    console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    const affordableItems = await Item.find({
      price: { $lte: user.money },
      level: { $lte: user.level }
    })
      .sort({ price: -1 })
      .limit(3);

    if (affordableItems.length > 0) {
      console.log(
        `   –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å ${affordableItems.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤:`
      );
      affordableItems.forEach(item => {
        console.log(`   - ${item.name} –∑–∞ ${item.price.toLocaleString('ru-RU')} üí∞`);
      });
    } else {
      console.log('   –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤');
      console.log('   –ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ —á–µ—Ä–µ–∑ —Ä–∞–±–æ—Ç—É –∏–ª–∏ –ø–æ–±–µ–¥—É –Ω–∞–¥ –±–æ—Å—Å–∞–º–∏');
    }

    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ (—Å–∏–º—É–ª—è—Ü–∏—è)
    console.log('\nüß™ –¢–µ—Å—Ç –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞:');
    const testItem = await Item.findOne({ price: { $lte: user.money } });

    if (testItem) {
      console.log(`   –ü–æ–ø—ã—Ç–∫–∞ –∫—É–ø–∏—Ç—å: ${testItem.name}`);
      console.log(`   –¶–µ–Ω–∞: ${testItem.price.toLocaleString('ru-RU')} üí∞`);
      console.log(
        `   –ë–∞–ª–∞–Ω—Å –¥–æ –ø–æ–∫—É–ø–∫–∏: ${user.money.toLocaleString('ru-RU')} üí∞`
      );

      const newBalance = user.money - testItem.price;
      console.log(`   –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏: ${newBalance.toLocaleString('ru-RU')} üí∞`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
      const existingUserInv = await UserInventory.findOne({
        userId: user._id
      });

      if (existingUserInv) {
        const existingItem = existingUserInv.items.find(
          i => i.itemId.toString() === testItem._id.toString()
        );

        if (existingItem) {
          console.log(
            `   ‚úÖ –ü—Ä–µ–¥–º–µ—Ç —É–∂–µ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${existingItem.quantity})`
          );
          console.log(
            `   –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –±—É–¥–µ—Ç: ${existingItem.quantity + 1} —à—Ç.`
          );
        } else {
          console.log('   ‚úÖ –ü—Ä–µ–¥–º–µ—Ç –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å (–Ω–æ–≤—ã–π)');
        }
      } else {
        console.log(
          '   ‚úÖ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∏ –ø—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω'
        );
      }

      console.log('\n   üí° –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ API –∏–ª–∏ –∏–≥—Ä—É');
    } else {
      console.log('   ‚ö†Ô∏è  –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–∞–≥–∞–∑–∏–Ω–∞:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç MongoDB');
  }
};

// –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const nickname = process.argv[2] || 'fuway';

console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –¥–ª—è: ${nickname}\n`);
testShopAndInventory(nickname);

