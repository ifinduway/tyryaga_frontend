import mongoose from 'mongoose';
import Item from '../models/Item.js';

const MONGODB_URI =
  process.env.MONGODB_URI || 'mongodb://localhost:27017/tyuryaga';

const cleanItemStats = async () => {
  try {
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã, —É–±–∏—Ä–∞—è –ª–∏—à–Ω–∏–µ —Å—Ç–∞—Ç—ã
    const items = await Item.find({});

    for (const item of items) {
      const newStats = {
        damage: item.stats?.damage || 0,
        energy: item.stats?.energy || 0
      };

      await Item.updateOne({ _id: item._id }, { $set: { stats: newStats } });

      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: ${item.name}`);
      console.log(
        `   –°—Ç–∞—Ç—ã: —É—Ä–æ–Ω=${newStats.damage}, —ç–Ω–µ—Ä–≥–∏—è=${newStats.energy}`
      );
    }

    console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ç–æ–≤ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üëã –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç MongoDB');
  }
};

cleanItemStats();
