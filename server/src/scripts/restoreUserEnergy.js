import mongoose from 'mongoose';
import dotenv from 'dotenv';
import User from '../models/User.js';

dotenv.config({ path: '../../.env' });

const MONGODB_URI =
  process.env.MONGODB_URI || 'mongodb://localhost:27017/tyuryaga';

const restoreUserEnergy = async nickname => {
  try {
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    const user = await User.findOne({ nickname });

    if (!user) {
      console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å nickname "${nickname}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }

    console.log(`üë§ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.nickname}`);
    console.log(`‚ö° –¢–µ–∫—É—â–∞—è —ç–Ω–µ—Ä–≥–∏—è: ${user.energy}`);

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —ç–Ω–µ—Ä–≥–∏—é –¥–æ –º–∞–∫—Å–∏–º—É–º–∞ (100,000)
    const maxEnergy = 100000;
    user.energy = maxEnergy;
    user.energyLastUpdate = new Date();
    await user.save();

    console.log(`‚úÖ –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ: ${user.energy}`);
    console.log(`üïê –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${user.energyLastUpdate}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —ç–Ω–µ—Ä–≥–∏–∏:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç MongoDB');
  }
};

// –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const nickname = process.argv[2] || 'fuway';

console.log(`üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${nickname}...`);
restoreUserEnergy(nickname);
