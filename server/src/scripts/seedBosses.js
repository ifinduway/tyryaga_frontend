import mongoose from 'mongoose';
import dotenv from 'dotenv';
import Boss from '../models/Boss.js';

dotenv.config({ path: '../../.env' });

const MONGODB_URI =
  process.env.MONGODB_URI || 'mongodb://localhost:27017/tyuryaga';

const seedBosses = async () => {
  try {
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –±–æ—Å—Å–æ–≤
    await Boss.deleteMany({});
    console.log('üóëÔ∏è –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–æ—Å—Å—ã —É–¥–∞–ª–µ–Ω—ã');

    const bosses = [
      {
        name: '–¢—é—Ä–µ–º–Ω—ã–π –ë–æ—Å—Å',
        maxHp: 1000,
        currentHp: 1000,
        level: 1,
        state: 'active',
        rewards: {
          money: 5000,
          exp: 1000,
          items: []
        },
        spawnAt: new Date()
      },
      {
        name: '–ì–ª–∞–≤–∞—Ä—å –ë–∞–Ω–¥—ã',
        maxHp: 5000,
        currentHp: 5000,
        level: 5,
        state: 'active',
        rewards: {
          money: 25000,
          exp: 5000,
          items: []
        },
        spawnAt: new Date()
      },
      {
        name: '–°–º–æ—Ç—Ä—è—â–∏–π',
        maxHp: 15000,
        currentHp: 15000,
        level: 10,
        state: 'active',
        rewards: {
          money: 75000,
          exp: 15000,
          items: []
        },
        spawnAt: new Date()
      },
      {
        name: '–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç',
        maxHp: 50000,
        currentHp: 50000,
        level: 20,
        state: 'active',
        rewards: {
          money: 250000,
          exp: 50000,
          items: []
        },
        spawnAt: new Date()
      },
      {
        name: '–ù–∞—á–∞–ª—å–Ω–∏–∫ –¢—é—Ä—å–º—ã',
        maxHp: 150000,
        currentHp: 150000,
        level: 50,
        state: 'active',
        rewards: {
          money: 1000000,
          exp: 200000,
          items: []
        },
        spawnAt: new Date()
      }
    ];

    const createdBosses = await Boss.insertMany(bosses);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${createdBosses.length} –±–æ—Å—Å–æ–≤:`);

    createdBosses.forEach(boss => {
      console.log(`\nüëπ ${boss.name}`);
      console.log(`   –£—Ä–æ–≤–µ–Ω—å: ${boss.level}`);
      console.log(`   HP: ${boss.maxHp}`);
      console.log(`   –ù–∞–≥—Ä–∞–¥—ã:`);
      console.log(`     üí∞ –î–µ–Ω—å–≥–∏: ${boss.rewards.money.toLocaleString('ru-RU')}`);
      console.log(`     ‚ú® –û–ø—ã—Ç: ${boss.rewards.exp.toLocaleString('ru-RU')}`);
      console.log(`   ID: ${boss._id}`);
    });

    console.log('\nüìä –ò—Ç–æ–≥–æ:');
    console.log(`   –í—Å–µ–≥–æ –±–æ—Å—Å–æ–≤: ${createdBosses.length}`);
    console.log(`   –í—Å–µ –±–æ—Å—Å—ã –∞–∫—Ç–∏–≤–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –±–æ—é!`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–æ—Å—Å–æ–≤:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç MongoDB');
  }
};

seedBosses();

