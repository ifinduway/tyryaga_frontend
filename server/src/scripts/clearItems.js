import mongoose from 'mongoose';
import Item from '../models/Item.js';
import UserInventory from '../models/UserInventory.js';

const MONGODB_URI =
  process.env.MONGODB_URI || 'mongodb://localhost:27017/tyuryaga';

const clearAllItems = async () => {
  try {
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞
    const itemsResult = await Item.deleteMany({});
    console.log(
      `üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞: ${itemsResult.deletedCount}`
    );

    // –û—á–∏—â–∞–µ–º –≤—Å–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏
    const inventoryResult = await UserInventory.updateMany(
      {},
      { $set: { items: [] } }
    );
    console.log(`üéí –û—á–∏—â–µ–Ω–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–π: ${inventoryResult.modifiedCount}`);

    console.log('‚úÖ –í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üëã –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç MongoDB');
  }
};

clearAllItems();
