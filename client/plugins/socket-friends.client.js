import { io } from 'socket.io-client';

export default defineNuxtPlugin(nuxtApp => {
  const config = useRuntimeConfig();
  const authStore = useAuthStore();
  const friendsStore = useFriendsStore();
  const notificationsStore = useNotificationsStore();

  // –ù–µ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  if (!authStore.isAuthenticated || !authStore.token) {
    console.log('üë• Socket Friends: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ');
    return;
  }

  console.log('üë• –ü–æ–¥–∫–ª—é—á–∞–µ–º Socket.io –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –¥—Ä—É–∑–µ–π...');

  const socket = io(config.public.wsUrl, {
    auth: {
      token: authStore.token
    },
    reconnection: true,
    reconnectionDelay: 1000,
    reconnectionAttempts: 5
  });

  socket.on('connect', () => {
    console.log('‚úÖ Socket Friends –ø–æ–¥–∫–ª—é—á–µ–Ω');
  });

  socket.on('disconnect', reason => {
    console.log('‚ùå Socket Friends –æ—Ç–∫–ª—é—á–µ–Ω:', reason);
  });

  socket.on('reconnect', attemptNumber => {
    console.log(`üîÑ Socket Friends –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω –ø–æ—Å–ª–µ ${attemptNumber} –ø–æ–ø—ã—Ç–æ–∫`);
  });

  // –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è
  socket.on('friendRequestReceived', data => {
    console.log('üì© –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è:', data);
    friendsStore.addIncomingRequestFromSocket(data);
    notificationsStore.addFriendRequestNotification(data);
  });

  // –ó–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è –ø—Ä–∏–Ω—è—Ç
  socket.on('friendRequestAccepted', data => {
    console.log('‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è –ø—Ä–∏–Ω—è—Ç:', data);
    friendsStore.addFriendFromSocket(data.friend);
    notificationsStore.addFriendAcceptedNotification(data.friend);
  });

  // –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –±–æ–π —Å –±–æ—Å—Å–æ–º
  socket.on('bossInvitationReceived', data => {
    console.log('‚öîÔ∏è –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –±–æ–π:', data);
    notificationsStore.addBossInvitationNotification(data);
  });

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º socket –≤ nuxtApp –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö
  nuxtApp.provide('friendsSocket', socket);

  // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  nuxtApp.hook('app:unmounted', () => {
    if (socket) {
      socket.disconnect();
      console.log('üëã Socket Friends –æ—Ç–∫–ª—é—á–µ–Ω –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    }
  });
});

